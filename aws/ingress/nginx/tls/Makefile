# ------------------------------------
# Set the following for your specific environment
# Already have a Cluster? Set these values to point to your existing environment
# Otherwise, these values will be used to create a new Cluster

region ?= us-east-1
zones ?= ['us-east-1a', 'us-east-1b']
clusterName ?= MY_CLUSTER_NAME
resourceGroup ?= MY_CLUSTER_NAME-rg
# This dnsLabel value will be used like so: MY_DOMAIN_NAME.region.cloudapp.azure.com
dnsLabel ?= MY_DOMAIN_NAME
machineType ?= c6i.4xlarge
# TODO: Currently, auto scaling configuration using these scripts for AWS is not working
# for now, minSize is also used as the starting size of the cluster
minSize ?= 3
maxSize ?= 6
certEmail ?= YOUR_EMAIL@camunda.com

# ------------------------------------
# The following variables should not be changed except for advanced use cases

clusterVersion ?= 1.23
volumeSize ?= 128

root ?= $(shell pwd)/../../..
fqdn ?= ${dnsLabel}.${region}.cloudapp.azure.com
# fqdn = $(IP).nip.io

# Camunda components will be installed into the following Kubernetes namespace
namespace ?= camunda
# Helm release name
release ?= camunda
# Helm chart coordinates for Camunda
chart ?= camunda/camunda-platform

# This file will be generated by make targets
chartValues ?= camunda-values-nginx-tls.yaml


.PHONY: all
all: cert-manager
#all: cluster.yaml kube oidc-provider metrics ingress-nginx-camunda urls

# 0 kube from aks.mk: Create Kubernetes cluster. (No aplication gateway required)
.PHONY: kube
kube: kube-aws

.PHONY: ingress-nginx-camunda
ingress-nginx-camunda:
	$(MAKE) -e -C $(helmProfilesDir)/ingress-aws all

.PHONY: clean
clean: clean-ingress-nginx-camunda clean-metrics clean-kube clean-files

.PHONY: clean-ingress-nginx-camunda
clean-ingress-nginx-camunda:
	$(MAKE) -e -C $(helmProfilesDir)/ingress-aws clean

include $(root)/include/camunda.mk
include $(root)/include/ingress-nginx.mk
include $(root)/include/cert-manager.mk
include $(root)/azure/include/kubernetes-aws.mk

# include $(root)/include/zbctl.mk
